/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package convertormorse;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.List;
import javax.sound.sampled.AudioFormat;
import javax.sound.sampled.AudioInputStream;
import javax.sound.sampled.AudioSystem;
import javax.sound.sampled.SourceDataLine;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author Alexander
 */
public class Interfaz extends javax.swing.JFrame {

    /**
     * Creates new form Interfaz
     */
    public Interfaz() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jPanel2 = new javax.swing.JPanel();
        jButton4 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(2, 0), new java.awt.Dimension(2, 0), new java.awt.Dimension(2, 32767));
        filler2 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 32767));

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton1.setText("Buscar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTextField1.setEditable(false);
        jTextField1.setText("Ningun archivo selecionado");
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jLabel1.setText("Seleccione el archivo a convertir");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jTextField1, javax.swing.GroupLayout.DEFAULT_SIZE, 475, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel3.add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 80, 570, 50));

        jTextArea1.setEditable(false);
        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jButton4.setText("Guardar");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton3.setText("Reproducir");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton5.setText("Nueva Conversion");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton2.setText("Convertir");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jButton2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jButton4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 16, Short.MAX_VALUE)
                .addComponent(jButton3)
                .addGap(18, 18, 18)
                .addComponent(jButton4)
                .addGap(18, 18, 18)
                .addComponent(jButton5)
                .addGap(25, 25, 25))
        );

        jTextArea2.setColumns(20);
        jTextArea2.setRows(5);
        jScrollPane2.setViewportView(jTextArea2);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addComponent(jScrollPane2)
            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jPanel3.add(jPanel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 140, 570, 180));

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabel2.setText("Conversor de Texto a Codigo Morse");
        jPanel3.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, -1, -1));
        jPanel3.add(filler1, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 0, 20, 360));
        jPanel3.add(filler2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 340, 600, 20));

        getContentPane().add(jPanel3, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    String[] textOriginal = null;
    String[] textMorse = null;
    File OriginalFile;

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:

        JFileChooser jfc = new JFileChooser("resources\\archivoTexto.txt");
        int returnValue = jfc.showOpenDialog(null);
        jfc.setDialogTitle("Choose a directory to save your file: ");
        jfc.setFileSelectionMode(JFileChooser.FILES_ONLY);
        jfc.setMultiSelectionEnabled(false);

        if (returnValue == JFileChooser.APPROVE_OPTION) {
            OriginalFile = jfc.getSelectedFile();
            jTextField1.setText(OriginalFile.getAbsolutePath());
            textOriginal = Leer(OriginalFile);
            for (int i = 0; i < textOriginal.length; i++) {
                jTextArea1.setText(jTextArea1.getText() + textOriginal[i] + "\n");
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        if (textOriginal != null) {
            textMorse = ToMorse(textOriginal);
            for (int i = 0; i < textMorse.length; i++) {
                jTextArea2.setText(jTextArea2.getText() + textMorse[i] + "\n");
                jButton2.setEnabled(false);
            }
        } else {
            JOptionPane.showMessageDialog(null, "No se ha selecionado un archivo a convertir");
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        if (textMorse != null) {
            ToSound(textMorse);
        } else {
            JOptionPane.showMessageDialog(null, "Primero convierta un texto para poder reproducir su sonido");
        }

    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        if (textMorse != null) {
            Escritura(textMorse, "resources\\archivoMorse");

        } else {
            JOptionPane.showMessageDialog(null, "Primero convierta un texto para poder guardar su reproduccion");
        }


    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        jButton2.setEnabled(true);

        jTextArea1.setText("");
        jTextArea2.setText("");
        jTextField1.setText("");
        textOriginal = null;
        textMorse = null;
        OriginalFile = null;
    }//GEN-LAST:event_jButton5ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Interfaz().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.Box.Filler filler1;
    private javax.swing.Box.Filler filler2;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables

    private void JFileChooser(String resources) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    static String[] Leer(File aLeer) {
        FileReader fr = null;
        BufferedReader br = null;
        String[] Texto;
        List<String> text = new ArrayList<>();
        try {
            //Inicializamos el archivo a leer
            fr = new FileReader(aLeer);
            br = new BufferedReader(fr);
            String linea;

            while ((linea = br.readLine()) != null) {
                text.add(linea);
            }

        } catch (Exception e) {
            e.printStackTrace();
        } finally {
            // Cerramos el fichero
            try {
                if (null != fr) {
                    fr.close();
                }
            } catch (Exception e2) {
                e2.printStackTrace();
            }
        }

        Texto = new String[text.size()];
        for (int i = 0; i < text.size(); i++) {
            Texto[i] = text.get(i);
        }
        return Texto;
    }

    static String[] ToMorse(String[] texto) {
        String[] Morse;
        List<String> morse = new ArrayList<>();

        for (int j = 0; j < texto.length; j++) {
            char[] Caracteres = texto[j].toCharArray();
            String LineaMorse = "";
            for (int i = 0; i < Caracteres.length; i++) {
                if (!trasform(Caracteres[i]).equals("")) {
                    LineaMorse += trasform(Caracteres[i]) + " ";
                }
            }
            morse.add(LineaMorse);
        }

        Morse = new String[morse.size()];
        for (int i = 0; i < morse.size(); i++) {
            Morse[i] = morse.get(i);
        }
        return Morse;

    }

    static public String trasform(char cara) {
        String result = "";
        switch (cara) {
            case 'a':
            case 'A':
                result = "._";
                break;
            case 'b':
            case 'B':
                result = "_...";
                break;
            case 'c':
            case 'C':
                result = "_._.";
                break;
            case 'd':
            case 'D':
                result = "_..";
                break;
            case 'e':
            case 'E':
                result = ".";
                break;
            case 'f':
            case 'F':
                result = ".._.";
                break;
            case 'g':
            case 'G':
                result = "__.";
                break;
            case 'h':
            case 'H':
                result = "....";
                break;
            case 'i':
            case 'I':
                result = "..";
                break;
            case 'j':
            case 'J':
                result = ".___";
                break;
            case 'k':
            case 'K':
                result = "_._.";
                break;
            case 'l':
            case 'L':
                result = "._..";
                break;
            case 'm':
            case 'M':
                result = "__";
                break;
            case 'n':
            case 'N':
                result = "_.";
                break;
            case 'o':
            case 'O':
                result = "___";
                break;
            case 'p':
            case 'P':
                result = ".__.";
                break;
            case 'q':
            case 'Q':
                result = "__._";
                break;
            case 'r':
            case 'R':
                result = "._.";
                break;
            case 's':
            case 'S':
                result = "...";
                break;
            case 't':
            case 'T':
                result = "_";
                break;
            case 'u':
            case 'U':
                result = ".._";
                break;
            case 'w':
            case 'W':
                result = ".__";
                break;
            case 'x':
            case 'X':
                result = "_.._";
                break;
            case 'y':
            case 'Y':
                result = "_.__";
                break;
            case 'z':
            case 'Z':
                result = "__..";
                break;
            case 'v':
            case 'V':
                result = "..._";
                break;

            case '1':
                result = ".____";
                break;
            case '2':
                result = "..___";
                break;
            case '3':
                result = "...__";
                break;
            case '4':
                result = "...._";
                break;
            case '5':
                result = ".....";
                break;
            case '6':
                result = "_....";
                break;
            case '7':
                result = "__...";
                break;
            case '8':
                result = "___..";
                break;
            case '9':
                result = "____.";
                break;
            case '0':
                result = "_____";
                break;
            case ' ':
                result = " ";
                break;
        }
        return result;
    }

    static void ToSound(String[] texto) {
        try {
            //A una linea en cod morse reproduce el sonido correspondiente
            for (int i = 0; i < texto.length; i++) {
                char[] CaracteresMorse = texto[i].toCharArray();
                for (int j = 0; j < CaracteresMorse.length; j++) {
                    Sonido(CaracteresMorse[j]);
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    static void Sonido(char i) {
        String ruta = "";
        boolean doit = true;

        // Guarda la ruta del sonido especifico que se quiere generar
        switch (i) {
            case '_':
                ruta = "resources\\line.wav";
                break;
            case '.':
                ruta = "resources\\dot.wav";
                break;
            case ' ':
                ruta = "resources\\space.wav";
                break;
            default:
                doit = false;
                break;
        }

        //si se guardo la ruta de un sonido
        if (doit) {

            //Crea y carga el archivo de sonido en la ruta
            File a = new File(ruta);
            byte[] buffer = new byte[4096];

            //Reproduce el sonido
            try {
                AudioInputStream is = AudioSystem.getAudioInputStream(a);
                AudioFormat format = is.getFormat();
                SourceDataLine line = AudioSystem.getSourceDataLine(format);
                line.open(format);
                line.start();
                while (is.available() > 0) {
                    int len = is.read(buffer);
                    line.write(buffer, 0, len);
                }
                line.drain(); //Espera a que el buffer se vacie para cerra la linea de sonido
                line.close();
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }

    static void Escritura(String[] Lineas, String ruta) {

        File tmpDir = new File(ruta + ".txt");
        boolean exists = tmpDir.exists();
        int c = 1;
        while (exists) {
            tmpDir = new File(ruta + c + ".txt");
            exists = tmpDir.exists();
            c++;
        }
        File archivo = tmpDir;
        FileWriter Fichero = null;
        PrintWriter PW = null;

        try {
            Fichero = new FileWriter(archivo);
            PW = new PrintWriter(Fichero);
            for (int i = 0; i < Lineas.length; i++) {
                PW.println(Lineas[i]);
            }
            JOptionPane.showMessageDialog(null, "El archivo con el codigo morse se encuentra en: " + archivo.getPath());
        } catch (Exception err) {
            err.printStackTrace();
        } finally {
            try {
                if (Fichero != null) {
                    Fichero.close();
                }
            } catch (Exception err) {
                err.printStackTrace();
            }
        }
    }
}
